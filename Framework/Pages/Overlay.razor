@page "/inventory"

@inject HttpClient HttpClient

<PageTitle>Inventory Test</PageTitle>

<h1>Test Inventory</h1>

<p>This component demonstrates the Inventory overlay.</p>

@using InventoryItems

<div class="overlay @OverlayClass" style="display: block">
    <div class="overlay-content">
        
        @if (InventoryItemsProps != null)
        {
            <div class="image-row">
                @foreach (var values in InventoryItemsProps)
                {   
                    Console.WriteLine(values);
                    <img src="@values.Image" alt="hello" />
                }
                
            </div>
        }
        else {
           
            Console.WriteLine("Error in Blazor, Inventory Images");
        }
        
        @ChildContent
    </div>
</div>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public string OverlayClass { get; set; } = "custom-overlay";

    private Items itemsObj = null!;
    private string? image;
    
    Item? OneItem;
    private string overlayDisplay = "block";
    private bool isOverlayVisible = true;

    private Inventory inventory = null!;

    private List<Item>? InventoryItemsProps;
    protected override async Task OnInitializedAsync()
    {   
        // create instance of Items
        itemsObj = new Items(HttpClient);
        await itemsObj.LoadItemsAsync();
        //create instance of Inventory
        inventory = new Inventory(HttpClient);

        await inventory.LoadInventoryAsync(); 

        InventoryItemsProps = inventory.GetPropertiesByList();
        foreach (Item item in InventoryItemsProps)
        {   
            Console.WriteLine(item.Description);
            Console.WriteLine(item.Image);
        }
        
        //image = OneItem.Image;

        
        //await InvokeAsync(StateHasChanged);


    }

    private async Task<Item> LoadPropertiesAsync()
    {   

        await itemsObj.LoadItemsAsync();
        // Load images data asynchronously
        return await Task.Run(() => itemsObj.GetPropertiesByName("goldkey"));
    }

    private void ToggleOverlay()
    {
        isOverlayVisible = !isOverlayVisible;
        overlayDisplay = isOverlayVisible ? "block" : "none";
    }
}
